{
    "apiVersion": "1.0.0",
    "swaggerVersion": "1.2",
    "basePath": "http://169.254.255.254:20912",
    "resourcePath": "/v1/meta_attribute",
    "produces": [
        "application/json"
    ],
    "consumes": [
        "application/json"
    ],
    "apis": [
        {
            "path": "/v1/meta_attribute_mapping/namespace",
            "operations": [
                {
                    "method": "POST",
                    "summary": "Register the specified meta attribute schema_id to the specified namespace.",
                    "notes": "The namespace and the schema_id of Meta attribute schema should exist.",
                    "type": "MetaAttributeMappingsResponse",
                    "nickname": "register_meta_attribute_mapping_for_namespace",
                    "authorizations": {},
                    "parameters": [
                        {
                            "name": "body",
                            "required": true,
                            "type": "RegisterMetaAttributeRequest",
                            "paramType": "body"
                        }
                    ],
                    "responseMessages": [
                        {
                            "code": 404,
                            "message": "Entity not found"
                        },
                        {
                            "code": 400,
                            "message": "Invalid request"
                        },
                        {
                            "code": 500,
                            "message": "Server side error"
                        }
                    ]
                },
                {
                    "method": "DELETE",
                    "summary": "Remove the specified meta attribute schema_id mapping from the specified namespace.",
                    "notes": "The namespace and the schema_id of Meta attribute schema should exist.",
                    "nickname": "delete_meta_attribute_mapping_for_namespace",
                    "authorizations": {},
                    "parameters": [
                        {
                            "name": "body",
                            "required": true,
                            "type": "RegisterMetaAttributeRequest",
                            "paramType": "body"
                        }
                    ],
                    "responseMessages": [
                        {
                            "code": 204,
                            "message": "Deletion sccessful"
                        },
                        {
                            "code": 404,
                            "message": "Entity not found"
                        },
                        {
                            "code": 400,
                            "message": "Invalid request"
                        },
                        {
                            "code": 500,
                            "message": "Server side error"
                        }
                    ]
                }
            ]
        },
        {
            "path": "/v1/meta_attribute_mapping/source",
            "operations": [
                {
                    "method": "POST",
                    "summary": "Register the specified meta attribute schema_id to the specified source.",
                    "notes": "The source and the schema_id of Meta attribute schema should exist.",
                    "type": "MetaAttributeMappingsResponse",
                    "nickname": "register_meta_attribute_mapping_for_source",
                    "authorizations": {},
                    "parameters": [
                        {
                            "name": "body",
                            "required": true,
                            "type": "RegisterMetaAttributeRequest",
                            "paramType": "body"
                        }
                    ],
                    "responseMessages": [
                        {
                            "code": 404,
                            "message": "Entity not found"
                        },
                        {
                            "code": 400,
                            "message": "Invalid request"
                        },
                        {
                            "code": 500,
                            "message": "Server side error"
                        }
                    ]
                },
                {
                    "method": "DELETE",
                    "summary": "Remove the specified meta attribute schema_id mapping from the specified source.",
                    "notes": "The source and the schema_id of Meta attribute schema should exist.",
                    "nickname": "delete_meta_attribute_mapping_for_source",
                    "authorizations": {},
                    "parameters": [
                        {
                            "name": "body",
                            "required": true,
                            "type": "RegisterMetaAttributeRequest",
                            "paramType": "body"
                        }
                    ],
                    "responseMessages": [
                        {
                            "code": 204,
                            "message": "Deletion sccessful"
                        },
                        {
                            "code": 404,
                            "message": "Entity not found"
                        },
                        {
                            "code": 400,
                            "message": "Invalid request"
                        },
                        {
                            "code": 500,
                            "message": "Server side error"
                        }
                    ]
                }
            ]
        },
        {
            "path": "/v1/meta_attribute_mapping/schema",
            "operations": [
                {
                    "method": "POST",
                    "summary": "Register the specified meta attribute schema_id to the specified schema.",
                    "notes": "The schema_id of both the AvroSchema and Meta attribute should exist.",
                    "type": "MetaAttributeMappingsResponse",
                    "nickname": "register_meta_attribute_mapping_for_schema",
                    "authorizations": {},
                    "parameters": [
                        {
                            "name": "body",
                            "required": true,
                            "type": "RegisterMetaAttributeRequest",
                            "paramType": "body"
                        }
                    ],
                    "responseMessages": [
                        {
                            "code": 404,
                            "message": "Entity not found"
                        },
                        {
                            "code": 400,
                            "message": "Invalid request"
                        },
                        {
                            "code": 500,
                            "message": "Server side error"
                        }
                    ]
                },
                {
                    "method": "DELETE",
                    "summary": "Remove the specified meta attribute schema_id mapping from the specified schema.",
                    "notes": "The schema_id of both the AvroSchema and Meta attribute should exist.",
                    "nickname": "delete_meta_attribute_mapping_for_schema",
                    "authorizations": {},
                    "parameters": [
                        {
                            "name": "body",
                            "required": true,
                            "type": "RegisterMetaAttributeRequest",
                            "paramType": "body"
                        }
                    ],
                    "responseMessages": [
                        {
                            "code": 204,
                            "message": "Deletion sccessful"
                        },
                        {
                            "code": 404,
                            "message": "Entity not found"
                        },
                        {
                            "code": 400,
                            "message": "Invalid request"
                        },
                        {
                            "code": 500,
                            "message": "Server side error"
                        }
                    ]
                }
            ]
        },
        {
            "path": "/v1/meta_attribute_mapping/namespace/{namespace_id}",
            "operations": [
                {
                    "method": "GET",
                    "summary": "Get a list of all meta attribute schema_ids mapped to specified namespace_id.",
                    "notes": "",
                    "type": "MetaAttributeMappingsResponse",
                    "nickname": "get_meta_attr_mappings_by_namespace_id",
                    "authorizations": {},
                    "parameters": [
                        {
                            "name": "namespace_id",
                            "description": "ID of namespace for which meta attributes will be fetched",
                            "required": true,
                            "type": "integer",
                            "paramType": "path",
                            "allowMultiple": false
                        }
                    ],
                    "responseMessages": [
                        {
                            "code": 400,
                            "message": "Invalid Namespace ID supplied"
                        },
                        {
                            "code": 404,
                            "message": "Namespace not found"
                        },
                        {
                            "code": 500,
                            "message": "Server side error"
                        }
                    ]
                }
            ]
        },
        {
            "path": "/v1/meta_attribute_mapping/source/{source_id}",
            "operations": [
                {
                    "method": "GET",
                    "summary": "Get a list of all meta attribute schema_ids mapped to specified source_id.",
                    "notes": "",
                    "type": "MetaAttributeMappingsResponse",
                    "nickname": "get_meta_attr_mappings_by_source_id",
                    "authorizations": {},
                    "parameters": [
                        {
                            "name": "source_id",
                            "description": "ID of source for which meta attributes will be fetched",
                            "required": true,
                            "type": "integer",
                            "paramType": "path",
                            "allowMultiple": false
                        }
                    ],
                    "responseMessages": [
                        {
                            "code": 400,
                            "message": "Invalid Source ID supplied"
                        },
                        {
                            "code": 404,
                            "message": "Source not found"
                        },
                        {
                            "code": 500,
                            "message": "Server side error"
                        }
                    ]
                }
            ]
        },
        {
            "path": "/v1/meta_attribute_mapping/schema/{schema_id}",
            "operations": [
                {
                    "method": "GET",
                    "summary": "Get a list of all meta attribute schema_ids mapped to specified schema_id.",
                    "notes": "",
                    "type": "MetaAttributeMappingsResponse",
                    "nickname": "get_meta_attr_mappings_by_schema_id",
                    "authorizations": {},
                    "parameters": [
                        {
                            "name": "schema_id",
                            "description": "ID of AvroSchema for which meta attributes will be fetched",
                            "required": true,
                            "type": "integer",
                            "paramType": "path",
                            "allowMultiple": false
                        }
                    ],
                    "responseMessages": [
                        {
                            "code": 400,
                            "message": "Invalid AvroSchema ID supplied"
                        },
                        {
                            "code": 404,
                            "message": "AvroSchema not found"
                        },
                        {
                            "code": 500,
                            "message": "Server side error"
                        }
                    ]
                }
            ]
        }

    ],
    "models": {
        "RegisterMetaAttributeRequest": {
            "id": "RegisterMetaAttributeRequest",
            "required": [
                "entity_id",
                "meta_attribute_schema_id"
            ],
            "properties": {
                "entity_id": {
                    "type": "integer",
                    "description": "ID of the entity (Namespace/Source/AvroSchema)to be mapped for."
                },
                "meta_attribute_schema_id": {
                    "type": "integer",
                    "description": "AvroSchema ID of Meta Attribute schema to be mapped."
                }
            }
        },
        "MetaAttributeMappingsResponse": {
            "id": "MetaAttributeMappingsResponse",
            "required": [
                "meta_attribute_schema_ids"
            ],
            "properties": {
                "meta_attribute_schema_ids": {
                    "type": "array",
                    "items": {
                        "type": "integer"
                    },
                    "description": "List of meta attribute schema IDs."
                }
            }
        }
    }
}
