{
    "apiVersion": "1.0.0",
    "swaggerVersion": "1.2",
    "basePath": "http://169.254.255.254:20912",
    "resourcePath": "/v1/data_targets",
    "produces": [
        "application/json"
    ],
    "consumes": [
        "application/json"
    ],
    "apis": [
        {
            "path": "/v1/data_targets",
            "operations": [
                {
                    "method": "GET",
                    "summary": "List all the data targets.",
                    "type": "array",
                    "items": {
                        "$ref": "DataTarget"
                    },
                    "nickname": "get_data_targets",
                    "authorizations": {},
                    "parameters": [],
                    "responseMessages": [
                        {
                            "code": 500,
                            "message": "Server side error"
                        }
                    ]
                },
                {
                    "method": "POST",
                    "summary": "Create a data target.",
                    "type": "DataTarget",
                    "nickname": "create_data_target",
                    "authorizations": {},
                    "parameters": [
                        {
                            "name": "body",
                            "required": true,
                            "type": "CreateDataTargetRequest",
                            "paramType": "body"
                        }
                    ],
                    "responseMessages": [
                        {
                            "code": 400,
                            "message": "Invalid request"
                        },
                        {
                            "code": 500,
                            "message": "Server side error"
                        }
                    ]
                }
            ]
        },
        {
            "path": "/v1/data_targets/{data_target_id}",
            "operations": [
                {
                    "method": "GET",
                    "summary": "Get the data target of specified ID",
                    "type": "DataTarget",
                    "nickname": "get_data_target_by_id",
                    "authorizations": {},
                    "parameters": [
                        {
                            "name": "data_target_id",
                            "required": true,
                            "type": "integer",
                            "paramType": "path",
                            "allowMultiple": false
                        }
                    ],
                    "responseMessages": [
                        {
                            "code": 400,
                            "message": "Invalid data target ID supplied"
                        },
                        {
                            "code": 404,
                            "message": "Data target ID not found"
                        },
                        {
                            "code": 500,
                            "message": "Server side error"
                        }
                    ]
                }
            ]
        },
        {
            "path": "/v1/data_targets/{data_target_id}/consumer_groups",
            "operations": [
                {
                    "method": "GET",
                    "summary": "List the consumer groups associated to this data target.",
                    "type": "array",
                    "items": {
                        "$ref": "ConsumerGroup"
                    },
                    "nickname": "get_consumer_groups_by_data_target_id",
                    "authorizations": {},
                    "parameters": [
                        {
                            "name": "data_target_id",
                            "required": true,
                            "type": "integer",
                            "paramType": "path",
                            "allowMultiple": false
                        }
                    ],
                    "responseMessages": [
                       {
                            "code": 400,
                            "message": "Invalid request supplied."
                        },
                        {
                            "code": 404,
                            "message": "Data target ID not found"
                        },
                        {
                            "code": 500,
                            "message": "Server side error"
                        }
                     ]
                },
                {
                    "method": "POST",
                    "summary": "Create a consumer group that is associated to this data target.",
                    "type": "ConsumerGroup",
                    "nickname": "create_consumer_group",
                    "authorizations": {},
                    "parameters": [
                        {
                            "name": "data_target_id",
                            "required": true,
                            "type": "integer",
                            "paramType": "path",
                            "allowMultiple": false
                        },
                        {
                            "name": "body",
                            "required": true,
                            "type": "CreateConsumerGroupRequest",
                            "paramType": "body"
                        }
                    ],
                    "responseMessages": [
                        {
                            "code": 400,
                            "message": "Invalid request"
                        },
                        {
                            "code": 404,
                            "message": "Data target ID not found"
                        },
                        {
                            "code": 500,
                            "message": "Server side error"
                        }
                    ]
                }
            ]
        },
        {
            "path": "/v1/data_targets/{data_target_id}/topics",
            "operations": [
                {
                    "method": "GET",
                    "summary": "Get all the topics associated to this data target, and optionally filtered by topic creation time.",
                    "type": "array",
                    "items": {
                        "$ref": "Topic"
                    },
                    "nickname": "get_topics_by_data_target_id",
                    "authorizations": {},
                    "parameters": [
                        {
                            "name": "data_target_id",
                            "required": true,
                            "type": "integer",
                            "paramType": "path",
                            "allowMultiple": false
                        },
                        {
                            "name": "created_after",
                            "description": "Unix timestamp the topics must be created after. The topics created at the same timestamp will be included.",
                            "required": false,
                            "type": "integer",
                            "paramType": "query",
                            "allowMultiple": false
                        }
                    ],
                    "responseMessages": [
                       {
                            "code": 400,
                            "message": "Invalid request supplied."
                        },
                        {
                            "code": 404,
                            "message": "Data target ID not found"
                        },
                        {
                            "code": 500,
                            "message": "Server side error"
                        }
                     ]
                }
            ]
        }
    ],
    "models": {
        "DataTarget": {
            "id": "DataTarget",
            "properties": {
                "data_target_id": {
                    "type": "integer",
                    "description": "Data target ID"
                },
                "target_type": {
                    "type": "string",
                    "description": "Short description of the data target type, such as Redshift."
                },
                "destination": {
                    "type": "string",
                    "description": "Url that connects to the data target, such as Redshift cluster connection url."
                },
                "created_at": {
                    "type": "string",
                    "format": "date-time",
                    "description": "When this data target is created. This should be a datetime string in UTC."
                },
                "updated_at": {
                    "type": "string",
                    "format": "date-time",
                    "description": "When this data target is last updated"
                }
            }
        },
        "ConsumerGroup": {
            "id": "ConsumerGroup",
            "properties": {
                "consumer_group_id": {
                    "type": "integer",
                    "description": "Consumer group ID"
                },
                "group_name": {
                    "type": "string",
                    "description": "Name of the consumer group."
                },
                "data_target": {
                    "$ref": "DataTarget",
                    "description": "The data target this consumer group associates to."
                },
                "created_at": {
                    "type": "string",
                    "format": "date-time",
                    "description": "When this consumer group is created"
                },
                "updated_at": {
                    "type": "string",
                    "format": "date-time",
                    "description": "When this consumer group is last updated"
                }
            }
        },
        "CreateDataTargetRequest": {
            "id": "CreateDataTargetRequest",
            "required": [
                "target_type",
                "destination"
            ],
            "properties": {
                "target_type": {
                    "type": "string",
                    "description": "Short description of the data target type, such as Redshift."
                },
                "destination": {
                    "type": "string",
                    "description": "Url that connects to the data target, such as the connection url to a Redshift cluster."
                }
            }
        },
        "CreateConsumerGroupRequest": {
            "id": "CreateConsumerGroupRequest",
            "required": [
                "group_name"
            ],
            "properties": {
                "group_name": {
                    "type": "string",
                    "description": "Name of the consumer group."
                }
            }
        },
        "Namespace": {
            "id": "Namespace",
            "properties": {
                "namespace_id": {
                    "type": "integer",
                    "description": "Namespace ID"
                },
                "name": {
                    "type": "string",
                    "description": "Namespace, such as yelpmain.db, etc"
                },
                "created_at": {
                    "type": "string",
                    "format": "date-time",
                    "description": "When this namespace is created"
                },
                "updated_at": {
                    "type": "string",
                    "format": "date-time",
                    "description": "When this namespace is last updated"
                }
            }
        },
        "Source": {
            "id": "Source",
            "properties": {
                "source_id": {
                    "type": "integer",
                    "description": "Source ID"
                },
                "namespace": {
                    "$ref": "Namespace",
                    "description": "Namespace of the source"
                },
                "name": {
                    "type": "string",
                    "description": "Name of the source, such as 'User' for table User."
                },
                "owner_email": {
                    "type": "string",
                    "description": "Email address of the source owner"
                },
                "category": {
                    "type": "string",
                    "description": "Category that this source belongs to"
                },
                "created_at": {
                    "type": "string",
                    "format": "date-time",
                    "description": "When this source is created"
                },
                "updated_at": {
                    "type": "string",
                    "format": "date-time",
                    "description": "When this source is last updated"
                }
            }
        },
        "Topic": {
            "id": "Topic",
            "properties": {
                "topic_id": {
                    "type": "integer",
                    "description": "Topic ID"
                },
                "name": {
                    "type": "string",
                    "description": "The Kafka topic name."
                },
                "source": {
                    "$ref": "Source",
                    "description": "Source of the Avro schema."
                },
                "contains_pii": {
                    "type": "boolean",
                    "description": "Whether the messages in this topic contain PII."
                },
                "is_log": {
                    "type": "boolean",
                    "description": "Whether the messages in this topic comes from a log kafka cluster."
                },
                "primary_keys": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "List of primary key names."
                },
                "created_at": {
                    "type": "string",
                    "format": "date-time",
                    "description": "When this topic is created"
                },
                "updated_at": {
                    "type": "string",
                    "format": "date-time",
                    "description": "When this topic is last updated"
                }
            }
        }
    }
}
