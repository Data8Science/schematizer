# -*- coding: utf-8 -*-
"""
Provides a decorator to post-transform a function's output.
"""
from functools import partial, wraps


def normalized(normalizer, **normalizer_kwargs):
    """Decorator that will add a post-transformation (normalizer).

    For example, if one writes,

        @normalized(abspath)
        def foo(x): ...

    then, whatever foo returns will be transformed into an absolute path.
    Like `validated` from validators.py, you can pass keyword arguments to
    the normalizer, e.g. @normalized(normalizer, normalizer_kwarg=value).
    """
    bound_normalizer = partial(normalizer, **normalizer_kwargs)

    def inner(fcn):
        @wraps(fcn)
        def fcn_helper(*fcn_argv, **fcn_kwargs):
            return bound_normalizer(fcn(*fcn_argv, **fcn_kwargs))
        return fcn_helper
    return inner
