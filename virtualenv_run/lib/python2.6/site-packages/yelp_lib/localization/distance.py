# Utility functions for converting between kilometers and miles.

# Distance units. The values of these constants are meant to be
# human-readable to aid debugging but not directly usable on the site
MI = '(miles)'
KM = '(kilometers)'

# What distance units should we use in each country?
distance_units_by_country = {
    # the US and GB use miles
    'US': MI,
    # the UK is officially moving to metric, but
    # people still think in miles.
    'GB': MI,
    # Puerto Rico uses metric (have to say this
    # explicitly or we'd default to MI because of the US)
    'PR': KM,
    # Everyone else uses metric!
    None: KM,
}

# units per mile, because by default, everything on the site is
# in miles
_units_per_mile = {
    MI: 1.0,
    KM: 1.609344,
}

def country_to_distance_units(country):
    """Return the distance units used by this country."""
    if country in distance_units_by_country:
        return distance_units_by_country[country]
    else:
        return distance_units_by_country[None]

def distance_in(to_units, distance, from_units=MI):
    """Convert the given distance to the given units, by default
    from miles.

    Suggested usage:
    distance_in(KM, 10.0)
    distance_in(MI, 16.1, from_units=KM)
    """
    # special case, to eliminate rounding error
    if to_units == from_units:
        return distance
    else:
        return distance * _units_per_mile[to_units] / _units_per_mile[from_units]
