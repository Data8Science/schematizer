# -*- coding: utf-8 -*-
from __future__ import absolute_import, division, print_function

import os
import time

from yelp_pyramid.__about__ import (
    __author__, __copyright__, __email__, __license__, __summary__, __title__,
    __uri__, __version__
)


def includeme(config):
    # Lazy loading so that version works.
    from yelp_servlib.config_util import initialize_logging
    import yelp_pyramid.renderers
    import yelp_pyramid.tweens

    registry = config.registry
    settings = registry.settings

    # Find service name and config path
    service_name = settings.get('service_name')
    if service_name is None:
        raise ValueError("No service_name set. Add 'service_name' to settings "
                         "before calling config.include.")

    initialize_logging(service_name)

    # Set base_path
    registry['base_path'] = base_path = os.environ.get('BASEPATH', (
        '/nail/srv/%s' % service_name))

    # Set version
    registry['version'] = None
    version_path = os.path.join(base_path, 'version')
    if os.path.exists(version_path):
        with open(version_path) as version_file:
            config.registry['version'] = version_file.read().strip()

    registry['start_time'] = time.time()

    config.include(yelp_pyramid.tweens)
    config.include(yelp_pyramid.renderers)

    config.add_route('status', '/status')
    config.add_route('status.version', '/status/version')

    config.add_route('status.healthcheck', '/status/healthcheck')

    config.scan('yelp_pyramid.views')
    config.scan('yelp_pyramid.hooks')


__all__ = [
    "__title__", "__summary__", "__uri__", "__version__", "__author__",
    "__email__", "__license__", "__copyright__", "includeme",
]
