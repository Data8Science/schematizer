from testify import run, assert_equal, assert_raises

from yelp_conn.mysql.drop import drop_table
from yelp_conn.mysql.drop import drop_table_if_exists
from yelp_conn.mysql.show import show_tables
from yelp_conn.mysqldb import OperationalError
from yelp_conn.testing.mysql_test_case import MySQLTestCase


class TestCreateTable(MySQLTestCase):

    def test_drop_table(self):
        # create table and then drop it
        self.cursor.execute('CREATE TABLE foo (x INT)')
        assert_equal(['foo'], show_tables(self.cursor))
        drop_table(self.cursor, 'foo')
        assert_equal([], show_tables(self.cursor))

        # we get an error if we try to drop the table twice
        assert_raises(OperationalError, drop_table, self.cursor, 'foo')

    def test_drop_table_if_exists(self):
        # create table and then drop it
        self.cursor.execute('CREATE TABLE foo (x INT)')
        assert_equal(['foo'], show_tables(self.cursor))
        success = drop_table_if_exists(self.cursor, 'foo')
        assert_equal(success, True)
        assert_equal([], show_tables(self.cursor))

        # we can try to drop the table twice, but it won't do anything
        success = drop_table_if_exists(self.cursor, 'foo')
        assert_equal(success, False)


if __name__ == '__main__':
    run()
