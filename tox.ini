[pytest]
norecursedirs = .* _darcs CVS docs virtualenv_run venv examples scratch tmp .tox build
addopts = --ignore=setup.py --doctest-glob=*.rst -vv

[testenv]
basepython = python2.7
deps = -rrequirements.txt

[testenv:acceptance]
whitelist_externals =
    curl
    sleep
skipsdist = True
setenv = {[testenv:docker-deps]setenv}
deps =
    {[testenv:docker-deps]deps}
    {[testenv:py27]deps}
commands =
    docker-compose pull
    docker-compose rm -v --force
    docker-compose build
    docker-compose up -d --no-build
    sleep 3

    # The idea here is to try the status port with retries until one succeeds,
    # or until the retries are exhaused, then to call it again with the fail
    # option on.  This can't be done in a single call because with fail on,
    # curl will exit immediately at the first failure, completely ignoring
    # the retry setting.  Curl should be replaced with real acceptance tests in
    # DATAPIPE-94.
    curl -v --max-time 10 --retry 6 -S localhost:49257/status
    curl -v --max-time 10 -S --fail localhost:49257/status

    py.test -qq -x --tb native acceptance_tests
    docker-compose kill

[testenv:devenv]
deps =
    {[testenv:docker-deps]deps}
    {[testenv:docs]deps}
    {[testenv:docs]deps}
    {[testenv:pre-commit]deps}
    {[testenv:py27]deps}
envdir = virtualenv_run

[testenv:devenv-command]
deps = {[testenv:devenv]deps}
envdir = {[testenv:devenv]envdir}
commands = {posargs}

[testenv:docker-deps]
deps = docker_compose==1.4.0rc3
setenv =
    COMPOSE_PROJECT_NAME = schematizer
    COMPOSE_API_VERSION = auto

[testenv:docker-push]
setenv =
    {[testenv:docker-deps]setenv}
deps =
    {[testenv:docker-deps]deps}
commands =
    docker-compose build
    fig-promote

[testenv:docs]
deps = sphinx
changedir = docs
commands = sphinx-build -b html -d build/doctrees source build/html

[testenv:pre-commit]
deps = pre-commit>=0.4.2
commands = pre-commit run --all-files --allow-unstaged-config

[testenv:py27]
whitelist_externals = docker
deps =
    {[testenv]deps}
    coverage
    ipdb
    ipython
    mock
    pytest
    pytest-ipdb
commands =
    docker pull docker-dev.yelpcorp.com/mysql-testing:latest
    coverage erase
    coverage run --source=schematizer/ -m pytest -vv --strict {posargs:tests}
    coverage report --show-missing --fail-under 92

[tox]
# Removed for now:
# py33, py34, pypy
envlist = py27, docs, acceptance, pre-commit
basepython = python2.7
indexserver =
    default = https://pypi.yelpcorp.com/simple/
